#include<stdlib.h>
#include<string.h>
#include<sys/socket.h>
#include<arpa/inet.h>
#include<unistd.h>

short SocketCreate(void)
{
        short hSocket;
        printf("Create the socket\n");
        hSocket = socket(AF_INET, SOCK_STREAM, 0);
        return hSocket;
}

int SocketConnect(int hSocket)
{
 
        int iRetval=-1;
        int ServerPort = 90190;
        struct sockaddr_in remote={0};
 
        remote.sin_addr.s_addr = inet_addr("127.0.0.1"); //Local Host
        remote.sin_family = AF_INET;
        remote.sin_port = htons(ServerPort);
 
        iRetval = connect(hSocket , (struct sockaddr *)&remote , sizeof(struct sockaddr_in));
 
 
        return iRetval;
}

int SocketSend(int hSocket,char* Rqst,short lenRqst)
 
{
 
        int shortRetval = -1;
        struct timeval tv;
        tv.tv_sec = 20;  /* 20 Secs Timeout */
        tv.tv_usec = 0;  
 
        if(setsockopt(hSocket, SOL_SOCKET, SO_SNDTIMEO, (char *)&tv,sizeof(tv)) < 0)
        {
          printf("Time Out\n");
          return -1;
        }
        shortRetval = send(hSocket , Rqst , lenRqst , 0);
 
        return shortRetval;
 }

int SocketReceive(int hSocket,char* Rsp,short RvcSize)
{
 
 int shortRetval = -1;
 struct timeval tv;
 tv.tv_sec = 20;  /* 20 Secs Timeout */
 tv.tv_usec = 0;  
 
 if(setsockopt(hSocket, SOL_SOCKET, SO_RCVTIMEO, (char *)&tv,sizeof(tv)) < 0)
 {
   printf("Time Out\n");
   return -1;
 
 }
 shortRetval = recv(hSocket, Rsp , RvcSize , 0);
 
 printf("Response %s\n",Rsp);
 
 return shortRetval;
 }

 int main(in argc, char * argv[])
 {
 int hSocket, read_size;
 char csBuff[1025]
 char srBuff[1024];
 struct sockaddr_in server;

  hSocket = SocketCreate();
 if(hSocket == -1)
 {
   printf("Could not create socket\n");
   return 1;
 }
 printf("Socket is created\n");
if (SocketConnect(hSocket) < 0)
 {
 perror("connect failed.\n");
 return 1;
 }
 
 printf("Sucessfully conected with server\n");
 
printf(" ._________________.\n");
printf(" | _______________ |\n");
printf(" | I             I |\n");
printf(" | I      i      I |\n");
printf(" | I     love    I |\n");
printf(" | I    netbsd   I |\n");
printf(" | I_____________I |\n");
printf(" !_________________!\n");
printf("    ._[_______]_.\n");
printf(".___|___________|___.\n");
printf("|::: ____           |\n");
printf("|    ~~~~ [------]  |\n");
printf("!___________________!\n");

 printf("Enter the Message: ");
 gets(csBuff);
 SocketSend(hSocket, csBuff, strlen(csBuff));
read_size=SocketReceive(hSocket,srBuff,1024);

close(hSocket);
}